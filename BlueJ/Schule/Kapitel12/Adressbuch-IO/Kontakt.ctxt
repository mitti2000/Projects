#BlueJ class context
comment0.params=name\ telefon\ adresse
comment0.target=Kontakt(java.lang.String,\ java.lang.String,\ java.lang.String)
comment0.text=\r\n\ Lege\ Kontaktdaten\ an.\ Bei\ allen\ Angaben\ werden\ umgebende\r\n\ Leerzeichen\ entfernt.\ Entweder\ der\ Name\ oder\ die\ Telefonnummer\r\n\ darf\ nicht\ leer\ sein.\r\n\ @param\ name\ der\ Name.\r\n\ @param\ telefon\ die\ Telefonnummer.\r\n\ @param\ adresse\ die\ Adresse.\r\n\ @throws\ IllegalStateException\ Wenn\ name\ und\ telefon\ leer\ sind.\r\n
comment1.params=
comment1.target=java.lang.String\ gibName()
comment1.text=\r\n\ @return\ den\ Namen.\r\n
comment2.params=
comment2.target=java.lang.String\ gibTelefon()
comment2.text=\r\n\ @return\ die\ Telefonnummer.\r\n
comment3.params=
comment3.target=java.lang.String\ gibAdresse()
comment3.text=\r\n\ @return\ die\ Adresse.\r\n
comment4.params=jenes
comment4.target=boolean\ equals(java.lang.Object)
comment4.text=\r\n\ Teste\ dieses\ und\ jenes\ Objekt\ auf\ Datengleichheit.\r\n\ @param\ jenes\ Das\ Objekt,\ das\ mit\ diesem\ verglichen\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ werden\ soll.\r\n\ @return\ true\ wenn\ das\ Parameterobjekt\ ein\ Kontakt\ ist\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ und\ sich\ die\ Datenfelder\ paarweise\ gleichen.\r\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\r\n\ @return\ einen\ mehrzeiligen\ String\ mit\ Name,\ Telefon\ und\ Adresse.\r\n
comment6.params=jenerKontakt
comment6.target=int\ compareTo(Kontakt)
comment6.text=\r\n\ Vergleiche\ diesen\ Kontakt\ mit\ einem\ anderen,\ damit\r\n\ sortiert\ werden\ kann.\ Kontakte\ werden\ nach\ Name,\r\n\ Telefonnummer\ und\ Adresse\ sortiert.\r\n\ @param\ jenerKontakt\ der\ Kontakt,\ mit\ dem\ verglichen\ werden\ soll.\r\n\ @return\ einen\ negativen\ Wert,\ wenn\ dieser\ Kontakt\ vor\ dem\ Parameter\r\n\ \ \ \ \ \ \ \ \ liegt,\ Null,\ wenn\ sie\ gleich\ sind,\ und\ einen\ positiven\ Wert,\r\n\ \ \ \ \ \ \ \ \ wenn\ dieser\ Kontakt\ nach\ dem\ Parameter\ folgt.\r\n
comment7.params=
comment7.target=int\ hashCode()
comment7.text=\r\n\ Berechne\ einen\ Hashcode\ nach\ den\ Regeln\ des\ Buches\r\n\ "Effektiv\ Java\ programmieren"\ von\ Joshua\ Bloch.\r\n\ @return\ einen\ Hashcode\ f\u00FCr\ diesen\ Kontakt.\r\n
numComments=8
