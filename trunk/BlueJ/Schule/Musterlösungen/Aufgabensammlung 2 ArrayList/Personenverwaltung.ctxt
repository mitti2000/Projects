#BlueJ class context
comment0.params=
comment0.target=Personenverwaltung()
comment0.text=\n\ Initialisiert\ die\ Sammlung,\ indem\ diese\ instantiiert\ wird\n
comment1.params=p
comment1.target=boolean\ hinzufuegen(Person)
comment1.text=\n\ F\u00FCgt\ eine\ Objektreferenz\ des\ Typs\ Person\ der\ Sammlung\ hinzu\n\ @param\ p\ Erwartet\ Objektreferenz\ des\ Typs\ Person\n\ @return\ Liefert\ true,\ wenn\ das\ Hinzuf\u00FCgen\ geklappt\ hat,\ ansonsten\ false\n
comment10.params=p
comment10.target=Person\ suchePerson(Person)
comment10.text=\n\ Durchsucht\ die\ Sammlung\ nach\ einem\ Objekt,\ welches\ dem\ per\n\ Parameter\ \u00FCbergebenen\ Objekts\ inhaltlich\ entspricht,\ also\ dieselben\n\ Werte\ in\ den\ Attributen\ tr\u00E4gt.\n\ @param\ p\ Objektreferenz\ des\ Vergleichobjekts\ \n\ @return\ Liefert\ die\ Objektreferenz\ der\ gefundenen\ Person\ \n
comment11.params=p
comment11.target=int\ entferne(Person)
comment11.text=\n\ Entfernt\ die\ Objektreferenzen\ aus\ der\ Sammlung,\ welche\ inhaltlich\n\ dem\ Parameter\ p\ entspricht.\ Wenn\ alle\ Werte\ des\ Objekts\ p\ sowie\n\ einem\ Objekt\ der\ Sammlung\ identisch\ sind,\ werden\ die\ Refernzen\n\ aus\ der\ Sammlung\ gel\u00F6scht.\n\ @param\ p\ Objektreferenz\ des\ Vergleichobjekts\ \n\ @return\ Anzahl\ gel\u00F6schter\ Objektreferenzen\n
comment12.params=p
comment12.target=java.util.ArrayList\ suchePersonen(Person)
comment12.text=\n\ Liefert\ eine\ ArrayList\ mit\ allen\ Referenzen,\ welche\ inhaltlich\ dem\n\ Objekt\ p\ entsprechen.\ \n\ @param\ Objektreferenz\ des\ Vergleichobjekts\ \n\ @return\ Liste\ mit\ allen\ Referenzen,\ welche\ inhaltlich\ gleich\ sind\ wie\ Vergleichsobjekt\n
comment13.params=
comment13.target=int\ generiereTestDaten()
comment13.text=\n\ Generiert\ einige\ Objekte\ des\ Typs\ Person,\ um\ die\ Sammlung\ zu\ testen.\n\ @return\ Anzahl\ der\ in\ der\ Sammlung\ befindlichen\ Objektreferenzen\n
comment2.params=p
comment2.target=boolean\ hinzufuegenVorne(Person)
comment2.text=\n\ F\u00FCgt\ eine\ Objektreferenz\ des\ Typs\ Person\ an\ der\ Spitze\ \n\ der\ Sammlung\ hinzu\ (also\ Index\ 0).\ \n\ @param\ p\ Erwartet\ Objektreferenz\ des\ Typs\ Person\n\ @return\ Liefert\ true,\ wenn\ das\ Hinzuf\u00FCgen\ geklappt\ hat,\ ansonsten\ false\n
comment3.params=p
comment3.target=boolean\ hinzufuegenHinten(Person)
comment3.text=\n\ F\u00FCgt\ eine\ Objektreferenz\ des\ Typs\ Person\ am\ Ende\ der\ Sammlung\ hinzu\n\ Dies\ ist\ das\ Standardverhalten\ einer\ ArrayList.\ Neue\ Elemente\ werden\n\ immer\ am\ Ende\ der\ Liste\ hinzugef\u00FCgt.\ Daher\ sind\ keine\ speziellen\n\ Massnahmen\ zu\ treffen,\ um\ eine\ Referenz\ am\ Ende\ zu\ speichern\n\ @param\ p\ Erwartet\ Objektreferenz\ des\ Typs\ Person\n\ @return\ Liefert\ true,\ wenn\ das\ Hinzuf\u00FCgen\ geklappt\ hat,\ ansonsten\ false\n
comment4.params=p\ position
comment4.target=boolean\ hinzufuegen(Person,\ int)
comment4.text=\ \n\ F\u00FCgt\ eine\ Objektreferenz\ des\ Typs\ Person\ an\ einer\ gew\u00FCnschten\ Position\n\ innerhalb\ der\ Sammlung\ hinzu.\ Die\ Position,\ welche\ per\ Parameter\ \u00FCbergeben\n\ wird,\ muss\ nat\u00FCrlich\ einem\ g\u00FCltigen\ Index\ der\ Sammlung\ entsprechen\n\ @param\ p\ Erwartet\ Objektreferenz\ des\ Typs\ Person\n\ @param\ position\ G\u00FCltige\ Position\ innerhalb\ der\ Sammlung\n\ @return\ Liefert\ true,\ wenn\ das\ Hinzuf\u00FCgen\ geklappt\ hat,\ ansonsten\ false\n
comment5.params=position
comment5.target=boolean\ entferne(int)
comment5.text=\n\ Entfernt\ eine\ Objektreferenz\ an\ einer\ bestimmten\ Position\ \n\ aus\ der\ Sammlung,\ sofern\ der\ \u00FCbergebene\ Index\ g\u00FCltig\ ist\n\ @param\ position\ Erwartet\ einen\ g\u00FCltigen\ Index\ innerhalb\ der\ Sammlung\n\ @return\ Liefert\ true,\ wenn\ das\ Hinzuf\u00FCgen\ geklappt\ hat,\ ansonsten\ false\n
comment6.params=
comment6.target=int\ gibAnzahl()
comment6.text=\ \n\ Liefert\ die\ Anzahl\ gespeicherten\ Objektreferenzen\ der\ Sammlung\n\ Die\ Z\u00E4hlung\ beginnt\ bei\ 1\n\ @return\ Anzahl\ gespeicherter\ Referenzen\ der\ Sammlung\n
comment7.params=
comment7.target=void\ zeigeDaten()
comment7.text=\ \n\ Generiert\ in\ der\ Konsole\ eine\ Liste\ mit\ allen\ Attributen\ der\n\ gespeicherten\ Objekte\n
comment8.params=nachname
comment8.target=Person\ suchePersonNachNachname(java.lang.String)
comment8.text=\n\ Sucht\ einen\ bestimmten\ Nachnamen\ in\ der\ Sammlung\ und\ liefert\n\ die\ Referenz\ des\ ersten\ Objekts\ zur\u00FCck,\ welchem\ dem\ Nachnamen\n\ entspricht.\n\ @param\ nachname\ Der\ gesuchte\ Nachname\ \n\ @return\ Referenz\ des\ gefundenen\ Objekts,\ ansonsten\ null\n
comment9.params=nachname
comment9.target=int\ suchePersonenMitBestimmtenNachnamen(java.lang.String)
comment9.text=\n\ Durchsucht\ die\ Sammlung\ nach\ einem\ gew\u00FCnschten\ Nachnamen\ und\ liefert\n\ die\ Anzahl\ der\ Objekte\ zur\u00FCck,\ welche\ diesen\ Nachnamen\ als\ Wert\ tragen\n\ @param\ nachname\ Der\ gesuchte\ Nachname\n\ @return\ Anzahl\ der\ gefundenen\ Objekte,\ welche\ dem\ Nachnamen\ entsprechen\n
numComments=14
