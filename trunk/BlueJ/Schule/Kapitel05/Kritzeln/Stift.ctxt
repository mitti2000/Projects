#BlueJ class context
comment0.params=
comment0.target=Stift()
comment0.text=\r\n\ Erzeuge\ einen\ neuen\ Stift\ mit\ seiner\ eigenen\ Canvas.\ Der\ Stift\ erzeugt\ sich\ eine\ neue\ Canvas,\ \r\n\ in\ die\ er\ zeichnen\ kann,\ und\ startet\ in\ einem\ definierten\ Zustand\ (Position\:\ Mitte\ der\ Leinwand,\r\n\ Richtung\:\ rechts,\ Farbe\:\ schwarz,\ Stift\:\ aufgesetzt).\r\n
comment1.params=xPos\ yPos\ zeichenCanvas
comment1.target=Stift(int,\ int,\ Canvas)
comment1.text=\r\n\ Erzeuge\ einen\ neuen\ Stift\ f\u00FCr\ eine\ gegebene\ Canvas.\ Die\ Richtung\ ist\ anf\u00E4nglich\ 0\ (nach\ rechts),\r\n\ die\ Farbe\ ist\ schwarz\ und\ der\ Stift\ ist\ aufgesetzt.\r\n\r\n\ @param\ xPos\ \ die\ anf\u00E4ngliche\ horizontale\ Koordinate\ des\ Stiftes\r\n\ @param\ yPos\ \ die\ anf\u00E4ngliche\ vertikale\ Koordinate\ des\ Stiftes\r\n\ @param\ zeichenCanvas\ \ die\ Canvas,\ in\ die\ gezeichnet\ werden\ soll\r\n
comment2.params=distanz
comment2.target=void\ bewegen(int)
comment2.text=\r\n\ Bewege\ den\ Stift\ f\u00FCr\ die\ angegebene\ Distanz\ in\ die\ aktuelle\ Richtung.\ Wenn,\ \r\n\ der\ Stift\ aufgesetzt\ ist,\ lasse\ eine\ Linie\ zur\u00FCck.\r\n\ \r\n\ @param\ distanz\ \ Die\ Distanz\ um\ die\ der\ Stift\ von\ der\ aktuellen\ Position\ aus\ nach\ vorne\ bewegt\ werden\ soll.\r\n
comment3.params=x\ y
comment3.target=void\ bewegenNach(int,\ int)
comment3.text=\r\n\ Bewege\ den\ Stift\ zu\ der\ angegebenen\ Position.\ Wenn,\ \r\n\ der\ Stift\ aufgesetzt\ ist,\ lasse\ eine\ Linie\ zur\u00FCck.\r\n\ \r\n\ @param\ x\ \ \ Die\ x-Koordinate,\ zu\ der\ der\ Stift\ bewegt\ werden\ soll.\r\n\ @param\ y\ \ \ Die\ y-Koordinate,\ zu\ der\ der\ Stift\ bewegt\ werden\ soll.\r\n
comment4.params=winkelgrad
comment4.target=void\ drehen(int)
comment4.text=\r\n\ Drehe\ den\ Stift\ ausgehend\ von\ der\ aktuellen\ Drehung\ um\ den\ gew\u00FCnschten\ Betrag\ \r\n\ (angegeben\ in\ Winkelgrad)\ im\ Uhrzeigersinn.\r\n\ \r\n\ @param\ winkelgrad\ \ der\ Winkel,\ um\ den\ gedreht\ werden\ soll.\ (360\ ergibt\ einen\ vollen\ Kreis.)\r\n
comment5.params=winkel
comment5.target=void\ drehenZu(int)
comment5.text=\r\n\ Drehe\ den\ Stift\ in\ die\ gew\u00FCnschte\ Richtung.\ 0\ bedeutet\ rechts,\ 90\ \ unten,\ 180\ links,\ 270\ oben.\r\n\ \r\n\ @param\ winkel\ \ der\ Winkel,\ zu\ dem\ der\ Stift\ gedreht\ werden\ soll.\r\n
comment6.params=neueFarbe
comment6.target=void\ setzeFarbe(java.awt.Color)
comment6.text=\r\n\ Lege\ die\ Zeichenfarbe\ fest.\r\n\ \r\n\ @param\ neueFarbe\ \ die\ Farbe,\ die\ f\u00FCr\ nachfolgende\ Zeichenoperationen\ verwendet\ werden\ soll.\r\n
comment7.params=
comment7.target=void\ stiftAbheben()
comment7.text=\r\n\ Hebe\ den\ Stift\ ab.\ Nachfolgende\ Bewegungen\ werden\ keine\ Linie\ auf\ dem\ Canvas\ hinterlassen.\r\n
comment8.params=
comment8.target=void\ stiftAufsetzen()
comment8.text=\r\n\ Setze\ den\ Stift\ auf.\ Nachfolgende\ Bewegungen\ werden\ eine\ Linie\ auf\ dem\ Canvas\ hinterlassen.\r\n
comment9.params=
comment9.target=void\ zufaelligesGekritzel()
comment9.text=\r\n\ Kritzel\ in\ der\ aktuellen\ Farbe\ auf\ den\ Canvas.\ Gr\u00F6\u00DFe\ und\ Komplexit\u00E4t\ des\ produzierten\ \r\n\ Gekritzels\ wird\ durch\ die\ Konstanten\ GEKRITZEL_GROESSE\ und\ GEKRITZEL_ZAEHLER\ bestimmt.\r\n
numComments=10
