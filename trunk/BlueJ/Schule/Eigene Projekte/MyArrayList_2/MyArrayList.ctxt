#BlueJ class context
comment0.params=
comment0.target=MyArrayList()
comment0.text=\r\n\ Erstellt\ eine\ neue\ MyArrayList\ mit\ 2\ leeren\ Elementen\r\n
comment1.params=
comment1.target=void\ resize()
comment1.text=\r\n\ Private\ Methode.\ Erh\u00F6ht\ die\ Gr\u00F6sse\ des\ Arrays\ um\ die\ H\u00E4lfte\ der\ belegenten\ Elemente(abgerundet)\r\n
comment10.params=index\ p
comment10.target=Person\ set(int,\ Person)
comment10.text=\r\n\ Ersetzt\ ein\ Objekt\ an\ einer\ bestimmten\ Stelle\ mit\ dem\ gew\u00FCschten\ Objekt\r\n\ @param\ index\ Gew\u00FCnschter\ Index\ der\ ersetzt\ werden\ soll\r\n\ @param\ p\ Objekt\ das\ an\ der\ gew\u00FCschten\ Stelle\ gespeichert\ werden\ soll\r\n\ @retun\ Person\ Person\ die\ vorher\ an\ der\ gew\u00FCschten\ Stelle\ war\r\n
comment11.params=
comment11.target=Person[]\ toArray()
comment11.text=\r\n\ Gibt\ die\ ArrayList\ als\ Array\ ohne\ leere\ Elemente\ zur\u00FCck\r\n\ @return\ Person[]\ Die\ ArrayList\ als\ Array\ ohne\ leere\ Elemente\r\n
comment12.params=
comment12.target=void\ trimToSize()
comment12.text=\r\n\ Schneidet\ das\ Array\ auf\ alle\ belegten\ und\ 2\ leere\ Elemente\ zu\r\n
comment13.params=
comment13.target=boolean\ removeDuplicates()
comment13.text=\r\n\ Entfernt\ alle\ mehrfach\ vokommenden\ Perosnen\ und\ beh\u00E4lt\ ein\ Exemplar\ der\ Sammlung\r\n\ @return\ boolean\ True\ wenn\ alles\ suaber\ gel\u00F6scht\ wurde\r\n
comment14.params=direction
comment14.target=Person[]\ sortByFirstname(boolean)
comment14.text=\r\n\ Gibt\ eine\ nach\ dem\ Vornamen\ sortierte\ Liste\ zur\u00FCck,\ ohne\ die\ interne\ Sammlung\ der\ Klasse\ zu\ beinflussen.\r\n\ Wenn\ der\ Parameter\ true\ ist,\ wird\ absteigend,\ ansonsten\ aufsteigend\ sortiert.\r\n\ @return\ Person[]\ Nach\ Vornamen\ sortierte\ Liste\r\n\ @param\ direction\ true\ \=\ absteigen,\ false\ \=\ aufsteigend\r\n
comment15.params=p\ position
comment15.target=boolean\ move(Person,\ int)
comment15.text=\r\n\ Verschiebt\ ein\ Element\ der\ Sammlung\ an\ eine\ neue\ Stelle,\ Liefert\ rue\ bei\ Erfolg,\ ansosnten\ false\r\n\ @return\ true\ bei\ Erfolg,\ sonst\ false\r\n\ @param\ p\ zu\ verschiebende\ Person\r\n\ @param\ position\ Position\ wo\ die\ Person\ hinsoll\ als\ int\r\n
comment16.params=
comment16.target=java.util.ArrayList\ invert()
comment16.text=\r\n\ Liefert\ eine\ invertierte\ Version\ der\ Sammlung\ in\ Form\ einer\ ArrayList\ zur\u00FCck\ ohne\ die\ interne\ Sammlung\ der\ Klasse\ zu\ beeinflussen\r\n\ @return\ ArrayList<Person>\ Invertierte\ Liste\ als\ ArrayList\r\n
comment17.params=from\ to\ remove
comment17.target=Person[]\ cutOut(int,\ int,\ boolean)
comment17.text=\r\n\ Liefert\ einen\ Abschnitt\ der\ Sammlung\ von\ Position\ from\ bis\ und\ mit\ Position\ to.\ Wenn\ remove\ true\ ist,\ wird\ die\ Sammlung\ um\ diesen\ Bereich\ gek\u00FCrzt,\r\n\ bei\ false\ wird\ nur\ der\ Ausschnitt\ zur\u00FCckgegeben\ ohne\ dass\ die\ interne\ Sammlung\ der\ Klasse\ beeinflusst\ wird\r\n\ @return\ Person[]\ Gew\u00FCnschter\ Ausschnitt\ als\ Array\r\n\ @from\ Startposition\r\n\ @to\ Endposition\r\n\ @remove\ Soll\ der\ Abschnitt\ aus\ dem\ Array\ entfernt\ werden?\r\n
comment18.params=p\ position
comment18.target=boolean\ insert(Person[],\ int)
comment18.text=\r\n\ F\u00FCgt\ eine\ Sammlung\ in\ der\ bestehende\ Sammlung\ der\ Klasse\ ein.\ Liefert\ tur\ bei\ Erfolg,\ oder\ false\ bei\ Misserfolg\r\n\ @return\ true\ bei\ Erfolf,\ false\ bei\ Misserfolg\r\n\ @param\ p\ Einzuf\u00FCgende\ Liste\ als\ Array\r\n\ @param\ position\ Einzuf\u00FCgende\ Position\ als\ int\r\n
comment19.params=p\ position
comment19.target=boolean\ insert(java.util.ArrayList,\ int)
comment19.text=\r\n\ F\u00FCgt\ eine\ Sammlung\ in\ der\ bestehende\ Sammlung\ der\ Klasse\ ein.\ Liefert\ tur\ bei\ Erfolg,\ oder\ false\ bei\ Misserfolg\r\n\ @return\ true\ bei\ Erfolf,\ false\ bei\ Misserfolg\r\n\ @param\ p\ Einzuf\u00FCgende\ Liste\ als\ ArrayList\r\n\ @param\ position\ Einzuf\u00FCgende\ Position\ als\ int\r\n
comment2.params=
comment2.target=void\ cleanup()
comment2.text=\r\n\ Private\ Methode.\ R\u00E4umt\ das\ Array\ auf\ so\ dass\ keine\ leeren\ Speicherpl\u00E4tze\ mehr\ vorhanden\ sind\ ausser\ am\ Ende\ des\ Arrays\r\n
comment20.params=
comment20.target=void\ create10Diff()
comment21.params=
comment21.target=void\ create10Mix()
comment22.params=
comment22.target=void\ createPersonArrayInsert1()
comment23.params=
comment23.target=void\ createPersonArrayListInsert1()
comment3.params=p
comment3.target=boolean\ add(Person)
comment3.text=\r\n\ F\u00FCgt\ eine\ Personen\ Objekt\ dem\ Array\ hinzu\r\n\ @param\ p\ Personen\ Objekt\ das\ hinzugef\u00FCgt\ werden\ soll\r\n\ @return\ true\ wenn\ die\ Person\ hinzugef\u00FCgt\ wurde\r\n
comment4.params=index\ p
comment4.target=boolean\ add(int,\ Person)
comment4.text=\r\n\ F\u00FCgt\ eine\ Personen\ Objekt\ dem\ Array\ an\ einer\ bestimmten\ Position\ hinzu\r\n\ @param\ index\ Index\ an\ welchem\ das\ Objekt\ hinzugef\u00FCgt\ werden\ soll\r\n\ @param\ p\ Personen\ Objekt\ das\ hinzugef\u00FCgt\ werden\ soll\r\n\ @return\ true\ wenn\ die\ Person\ hinzugef\u00FCgt\ wurde\r\n
comment5.params=index
comment5.target=Person\ remove(int)
comment5.text=\r\n\ L\u00F6scht\ eine\ Elemtent\ an\ einer\ bestimmten\ Stelle\r\n\ @param\ index\ Index\ welcher\ gel\u00F6scht\ werden\ soll\r\n\ @return\ Person\ Element\ das\ gel\u00F6scht\ wurde\r\n
comment6.params=p
comment6.target=boolean\ remove(Person)
comment6.text=\r\n\ L\u00F6scht\ das\ erste\ Elemtent\ im\ Array,\ dass\ der\ \u00FCbergebenen\ Person\ entspricht\r\n\ @param\ p\ Person\ die\ gel\u00F6scht\ werden\ soll\r\n\ @return\ true\ wenn\ die\ Person\ gel\u00F6scht\ wurde\r\n
comment7.params=
comment7.target=void\ clear()
comment7.text=\r\n\ L\u00F6scht\ alle\ Elemente\ aus\ der\ Sammlung.\ Das\ Array\ hat\ danach\ wieder\ 2\ leere\ Elemente\r\n
comment8.params=index
comment8.target=Person\ get(int)
comment8.text=\r\n\ Liefert\ eine\ Person\ an\ einem\ bestimmten\ Index\ zur\u00FCck\r\n\ @param\ index\ Index\ der\ gew\u00FCnschten\ Person\r\n\ @return\ Person\ Person\ an\ gew\u00FCnschten\ Index\r\n
comment9.params=
comment9.target=int\ size()
comment9.text=\r\n\ Liefert\ die\ Gr\u00F6sse\ des\ Arrays\ zur\u00FCck\r\n\ @return\ int\ Gr\u00F6sse\ des\ Arrays\r\n
numComments=24
