#BlueJ class context
comment0.params=tiefe\ breite
comment0.target=Feld(int,\ int)
comment0.text=\r\n\ Erzeuge\ ein\ Feld\ mit\ den\ angegebenen\ Dimensionen.\r\n\ @param\ tiefe\ die\ Tiefe\ des\ Feldes.\r\n\ @param\ breite\ die\ Breite\ des\ Feldes.\r\n
comment1.params=
comment1.target=void\ raeumen()
comment1.text=\r\n\ R\u00E4ume\ das\ Feld.\r\n
comment10.params=position
comment10.target=java.util.List\ nachbarpositionen(Position)
comment10.text=\r\n\ Liefert\ eine\ gemischte\ Liste\ von\ Nachbarpositionen\r\n\ zu\ der\ gegebenen\ Position.\ Diese\ Liste\ enth\u00E4lt\ nicht\ die\ gegebene\ \r\n\ Position\ selbst.\ Alle\ Positionen\ liegen\ innerhalb\ des\ Feldes.\r\n\ @param\ position\ die\ Position,\ f\u00FCr\ die\ Nachbarpositionen\ zu\ liefern\ sind.\r\n\ @return\ eine\ Liste\ der\ Nachbarpositionen\ zur\ gegebenen\ Position.\r\n
comment11.params=
comment11.target=int\ gibTiefe()
comment11.text=\r\n\ Liefere\ die\ Tiefe\ dieses\ Feldes.\r\n\ @return\ die\ Tiefe\ dieses\ Feldes.\r\n
comment12.params=
comment12.target=int\ gibBreite()
comment12.text=\r\n\ Liefere\ die\ Breite\ dieses\ Feldes.\r\n\ @return\ die\ Breite\ dieses\ Feldes.\r\n
comment2.params=position
comment2.target=void\ raeumen(Position)
comment2.text=\r\n\ R\u00E4ume\ die\ gegebene\ Position.\r\n\ @param\ position\ die\ zu\ leerende\ Position\r\n
comment3.params=tier\ zeile\ spalte
comment3.target=void\ platziere(java.lang.Object,\ int,\ int)
comment3.text=\r\n\ Platziere\ das\ gegebene\ Tier\ an\ der\ angegebenen\ Position.\r\n\ Wenn\ an\ der\ Position\ bereits\ ein\ Tier\ eingetragen\ ist,\r\n\ geht\ es\ verloren.\r\n\ @param\ tier\ das\ Tier\ das\ platziert\ werden\ soll.\r\n\ @param\ zeile\ die\ Zeilenkoordinate\ der\ Position.\r\n\ @param\ spalte\ die\ Spaltenkoordinate\ der\ Position.\r\n
comment4.params=tier\ position
comment4.target=void\ platziere(java.lang.Object,\ Position)
comment4.text=\r\n\ Platziere\ das\ gegebene\ Tier\ an\ der\ angegebenen\ Position.\r\n\ Wenn\ an\ der\ Position\ bereits\ ein\ Tier\ eingetragen\ ist,\r\n\ geht\ es\ verloren.\r\n\ @param\ tier\ das\ Tier,\ das\ platziert\ werden\ soll.\r\n\ @param\ position\ die\ Position,\ an\ der\ das\ Tier\ platziert\ werden\ soll.\r\n
comment5.params=position
comment5.target=java.lang.Object\ gibObjektAn(Position)
comment5.text=\r\n\ Liefere\ das\ Tier\ an\ der\ angegebenen\ Position,\ falls\ vorhanden.\r\n\ @param\ position\ die\ gew\u00FCnschte\ Position.\r\n\ @return\ das\ Tier\ an\ der\ angegebenen\ Position\ oder\ null,\ wenn\r\n\ \ \ \ \ \ \ \ \ dort\ kein\ Tier\ eingetragen\ ist.\r\n
comment6.params=zeile\ spalte
comment6.target=java.lang.Object\ gibObjektAn(int,\ int)
comment6.text=\r\n\ Liefere\ das\ Tier\ an\ der\ angegebenen\ Position,\ falls\ vorhanden.\r\n\ @param\ zeile\ die\ gew\u00FCnschte\ Zeile.\r\n\ @param\ spalte\ die\ gew\u00FCnschte\ Spalte.\r\n\ @return\ das\ Tier\ an\ der\ angegebenen\ Position\ oder\ null,\ wenn\r\n\ \ \ \ \ \ \ \ \ dort\ kein\ Tier\ eingetragen\ ist.\r\n
comment7.params=position
comment7.target=Position\ zufaelligeNachbarposition(Position)
comment7.text=\r\n\ W\u00E4hle\ zuf\u00E4llig\ eine\ der\ Positionen,\ die\ an\ die\ gegebene\ Position\r\n\ angrenzen,\ oder\ die\ gegebene\ Position\ selbst.\r\n\ Die\ gelieferte\ Position\ liegt\ innerhalb\ der\ g\u00FCltigen\ Grenzen\r\n\ dieses\ Feldes.\r\n\ @param\ position\ die\ Position,\ von\ der\ ein\ Nachbar\ zu\ w\u00E4hlen\ ist.\r\n\ @return\ eine\ g\u00FCltige\ Position\ innerhalb\ dieses\ Feldes.\ Das\ kann\r\n\ \ \ \ \ \ \ \ \ auch\ die\ gegebene\ Position\ selbst\ sein.\r\n
comment8.params=position
comment8.target=java.util.List\ freieNachbarpositionen(Position)
comment8.text=\r\n\ Liefert\ eine\ gemischte\ Liste\ von\ freien\ Nachbarposition.\r\n\ @param\ position\ die\ Position,\ f\u00FCr\ die\ Nachbarpositionen\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ zu\ liefern\ ist.\r\n\ @return\ eine\ Liste\ freier\ Nachbarpositionen.\r\n
comment9.params=position
comment9.target=Position\ freieNachbarposition(Position)
comment9.text=\r\n\ Versuche,\ eine\ freie\ Nachbarposition\ zur\ gegebenen\ Position\ zu\r\n\ finden.\ Wenn\ es\ keine\ gibt,\ liefere\ null.\r\n\ Die\ gelieferte\ Position\ liegt\ innerhalb\ der\ Feldgrenzen.\r\n\ @param\ position\ die\ Position,\ f\u00FCr\ die\ eine\ Nachbarposition\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ zu\ liefern\ ist.\r\n\ @return\ eine\ g\u00FCltige\ Position\ innerhalb\ der\ Feldgrenzen.\ \r\n
numComments=13
