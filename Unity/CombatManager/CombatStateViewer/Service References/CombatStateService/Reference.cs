/*
 *  Reference.cs
 *
 *  Copyright (C) 2010-2012 Kyle Olson, kyle@kyleolson.com
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

ï»¿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CombatStateViewer.CombatStateService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleCombatListItem", Namespace="http://schemas.datacontract.org/2004/07/CombatManager")]
    [System.SerializableAttribute()]
    public partial class SimpleCombatListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] FollowersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] Followers {
            get {
                return this.FollowersField;
            }
            set {
                if ((object.ReferenceEquals(this.FollowersField, value) != true)) {
                    this.FollowersField = value;
                    this.RaisePropertyChanged("Followers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CombatStateService.ICombatStateService", CallbackContract=typeof(CombatStateViewer.CombatStateService.ICombatStateServiceCallback))]
    public interface ICombatStateService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICombatStateService/GetCombatList", ReplyAction="http://tempuri.org/ICombatStateService/GetCombatListResponse")]
        CombatStateViewer.CombatStateService.SimpleCombatListItem[] GetCombatList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICombatStateService/GetCharacters", ReplyAction="http://tempuri.org/ICombatStateService/GetCharactersResponse")]
        CombatManager.Character[] GetCharacters();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICombatStateService/GetCurrentCharacter", ReplyAction="http://tempuri.org/ICombatStateService/GetCurrentCharacterResponse")]
        CombatManager.Character GetCurrentCharacter();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICombatStateService/GetCurrentCharacterID", ReplyAction="http://tempuri.org/ICombatStateService/GetCurrentCharacterIDResponse")]
        System.Guid GetCurrentCharacterID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICombatStateService/GetRound", ReplyAction="http://tempuri.org/ICombatStateService/GetRoundResponse")]
        System.Nullable<int> GetRound();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICombatStateServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICombatStateService/CurrentPlayerChanged", ReplyAction="http://tempuri.org/ICombatStateService/CurrentPlayerChangedResponse")]
        void CurrentPlayerChanged(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICombatStateService/CombatListChanged", ReplyAction="http://tempuri.org/ICombatStateService/CombatListChangedResponse")]
        void CombatListChanged();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICombatStateService/CharactersChanged", ReplyAction="http://tempuri.org/ICombatStateService/CharactersChangedResponse")]
        void CharactersChanged();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICombatStateServiceChannel : CombatStateViewer.CombatStateService.ICombatStateService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CombatStateServiceClient : System.ServiceModel.DuplexClientBase<CombatStateViewer.CombatStateService.ICombatStateService>, CombatStateViewer.CombatStateService.ICombatStateService {
        
        public CombatStateServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CombatStateServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CombatStateServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CombatStateServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CombatStateServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public CombatStateViewer.CombatStateService.SimpleCombatListItem[] GetCombatList() {
            return base.Channel.GetCombatList();
        }
        
        public CombatManager.Character[] GetCharacters() {
            return base.Channel.GetCharacters();
        }
        
        public CombatManager.Character GetCurrentCharacter() {
            return base.Channel.GetCurrentCharacter();
        }
        
        public System.Guid GetCurrentCharacterID() {
            return base.Channel.GetCurrentCharacterID();
        }
        
        public System.Nullable<int> GetRound() {
            return base.Channel.GetRound();
        }
    }
}
